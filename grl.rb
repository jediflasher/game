#GenerateResourseList – grl.rb
#generates actionscript file contents constants of file names
#option 1 – input directory with atlas{n}.xml files, default: ./assets/graphics/hd
#option 2 – output directory, default: ./src/ru/catAndBall/view/assets

@input_directory = './assets/graphics/hd/'
@output_directory = './src/ru/catAndBall/view/assets/'
@file_name = 'AssetList'

File.open(@output_directory + @file_name + '.as', 'w+') { |file|
  file.truncate(0)
  file.puts "/*!!!!!!! ATTENTON !!!!!!!\nfile autogenerated by grl.rb script. Do not change it\n!!!!!!!!!!!!!!!!!!!!!!!!*/"
  file.puts "package ru.catAndBall.view.assets {\n\n\tpublic final class #{@file_name} {\n\n"

  (0..4).each { |index|
    xml_file = @input_directory + "atlas#{index}.xml"
    if File.exists? xml_file
      puts "found file: atlas#{index}.xml"
      File.open(xml_file).each { |line|
        if line.include? '<SubTexture name="'
          value = line.scan(/.+name="([a-zA-Z0-9_\/-]+)/)[0][0]
          name = value.gsub('/', '_')
          if name =~ /^\d+/
            name = 'img' + name;
          end

          val = "\t\tpublic static const #{name}:String = '#{value}';\n"
          file.puts val
          puts val
        end
      }
    end
  }

  file.puts "\n\n"

  #generating fonts list
  Dir.foreach(@input_directory + 'fonts') { |filename|
    if filename =~ /^[a-zA-Z_]+/
      val = "\t\tpublic static const font_#{filename}:String = '#{filename}';\n"
      file.puts val
      puts val
    end
  }


  file.puts "\n\t}\n}"
  puts "file generated: #{@output_directory}#{@file_name}.as'"
}